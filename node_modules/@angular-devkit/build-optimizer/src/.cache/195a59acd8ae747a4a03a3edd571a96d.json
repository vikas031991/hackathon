{"remainingRequest":"/Users/vikas/Downloads/angularpwa/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vikas/Downloads/angularpwa/node_modules/rxjs/operator/subscribeOn.js","dependencies":[{"path":"/Users/vikas/Downloads/angularpwa/node_modules/rxjs/operator/subscribeOn.js","mtime":1523558820000},{"path":"/Users/vikas/Downloads/angularpwa/node_modules/cache-loader/dist/cjs.js","mtime":1523856032056},{"path":"/Users/vikas/Downloads/angularpwa/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nvar subscribeOn_1 = require('../operators/subscribeOn');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return subscribeOn_1.subscribeOn(scheduler, delay)(this);\n}\nexports.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map",null]}
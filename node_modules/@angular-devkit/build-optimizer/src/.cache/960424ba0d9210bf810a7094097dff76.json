{"remainingRequest":"/Users/vikas/Downloads/angularpwa/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vikas/Downloads/angularpwa/node_modules/rxjs/scheduler/AsapScheduler.js","dependencies":[{"path":"/Users/vikas/Downloads/angularpwa/node_modules/rxjs/scheduler/AsapScheduler.js","mtime":1523558820000},{"path":"/Users/vikas/Downloads/angularpwa/node_modules/cache-loader/dist/cjs.js","mtime":1523856032056},{"path":"/Users/vikas/Downloads/angularpwa/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n",null]}